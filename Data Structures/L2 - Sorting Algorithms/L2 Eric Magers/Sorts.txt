Running BubbleSort
On C-Array, swap() defined as seperate function
0: 0
1000: 643
2000: 1317
3000: 2002
4000: 2670
5000: 3312
6000: 3979
7000: 4651
8000: 5269
9000: 5917
10000: 6588
11000: 7229
12000: 8000
13000: 9265
14000: 10573
15000: 11895
16000: 13223
17000: 14545
18000: 15773
19000: 17059
20000: 18365
21000: 19727
22000: 21024
23000: 22392
24000: 23703
SORT TIME: 5.887

On C-Array, swap done in sorting function
0: 0
1000: 643
2000: 1317
3000: 2002
4000: 2670
5000: 3312
6000: 3979
7000: 4651
8000: 5269
9000: 5917
10000: 6588
11000: 7229
12000: 8000
13000: 9265
14000: 10573
15000: 11895
16000: 13223
17000: 14545
18000: 15773
19000: 17059
20000: 18365
21000: 19727
22000: 21024
23000: 22392
24000: 23703
SORT TIME: 2.428

Having the swap defined in a seperate function does
 makes a big difference for bigger arrays.

On Array<int>, swap done in sorting function
0: 0
1000: 643
2000: 1317
3000: 2002
4000: 2670
5000: 3312
6000: 3979
7000: 4651
8000: 5269
9000: 5917
10000: 6588
11000: 7229
12000: 8000
13000: 9265
14000: 10573
15000: 11895
16000: 13223
17000: 14545
18000: 15773
19000: 17059
20000: 18365
21000: 19727
22000: 21024
23000: 22392
24000: 23703
SORT TIME: 53.175

On vector, swap done in sorting function
0: 0
1000: 643
2000: 1317
3000: 2002
4000: 2670
5000: 3312
6000: 3979
7000: 4651
8000: 5269
9000: 5917
10000: 6588
11000: 7229
12000: 8000
13000: 9265
14000: 10573
15000: 11895
16000: 13223
17000: 14545
18000: 15773
19000: 17059
20000: 18365
21000: 19727
22000: 21024
23000: 22392
24000: 23703
SORT TIME: 90.214

Running Flagged BubbleSort
On C-Array
0: 0
1000: 643
2000: 1317
3000: 2002
4000: 2670
5000: 3312
6000: 3979
7000: 4651
8000: 5269
9000: 5917
10000: 6588
11000: 7229
12000: 8000
13000: 9265
14000: 10573
15000: 11895
16000: 13223
17000: 14545
18000: 15773
19000: 17059
20000: 18365
21000: 19727
22000: 21024
23000: 22392
24000: 23703
SORT TIME: 1.653

On Array<int>
0: 0
1000: 643
2000: 1317
3000: 2002
4000: 2670
5000: 3312
6000: 3979
7000: 4651
8000: 5269
9000: 5917
10000: 6588
11000: 7229
12000: 8000
13000: 9265
14000: 10573
15000: 11895
16000: 13223
17000: 14545
18000: 15773
19000: 17059
20000: 18365
21000: 19727
22000: 21024
23000: 22392
24000: 23703
SORT TIME: 52.782

On vector
0: 0
1000: 643
2000: 1317
3000: 2002
4000: 2670
5000: 3312
6000: 3979
7000: 4651
8000: 5269
9000: 5917
10000: 6588
11000: 7229
12000: 8000
13000: 9265
14000: 10573
15000: 11895
16000: 13223
17000: 14545
18000: 15773
19000: 17059
20000: 18365
21000: 19727
22000: 21024
23000: 22392
24000: 23703
SORT TIME: 90.757

Running Selection Sort
On C-Array
0: 0
1000: 643
2000: 1317
3000: 2002
4000: 2670
5000: 3312
6000: 3979
7000: 4651
8000: 5269
9000: 5917
10000: 6588
11000: 7229
12000: 8000
13000: 9265
14000: 10573
15000: 11895
16000: 13223
17000: 14545
18000: 15773
19000: 17059
20000: 18365
21000: 19727
22000: 21024
23000: 22392
24000: 23703
SORT TIME: 0.792

On Array<int>
0: 0
1000: 643
2000: 1317
3000: 2002
4000: 2670
5000: 3312
6000: 3979
7000: 4651
8000: 5269
9000: 5917
10000: 6588
11000: 7229
12000: 8000
13000: 9265
14000: 10573
15000: 11895
16000: 13223
17000: 14545
18000: 15773
19000: 17059
20000: 18365
21000: 19727
22000: 21024
23000: 22392
24000: 23703
SORT TIME: 17.565

On vector
0: 0
1000: 643
2000: 1317
3000: 2002
4000: 2670
5000: 3312
6000: 3979
7000: 4651
8000: 5269
9000: 5917
10000: 6588
11000: 7229
12000: 8000
13000: 9265
14000: 10573
15000: 11895
16000: 13223
17000: 14545
18000: 15773
19000: 17059
20000: 18365
21000: 19727
22000: 21024
23000: 22392
24000: 23703
SORT TIME: 30.057

Running Insertion Sort
On C-Array
0: 0
1000: 643
2000: 1317
3000: 2002
4000: 2670
5000: 3312
6000: 3979
7000: 4651
8000: 5269
9000: 5917
10000: 6588
11000: 7229
12000: 8000
13000: 9265
14000: 10573
15000: 11895
16000: 13223
17000: 14545
18000: 15773
19000: 17059
20000: 18365
21000: 19727
22000: 21024
23000: 22392
24000: 23703
SORT TIME: 0.396

On Array<int>
0: 0
1000: 643
2000: 1317
3000: 2002
4000: 2670
5000: 3312
6000: 3979
7000: 4651
8000: 5269
9000: 5917
10000: 6588
11000: 7229
12000: 8000
13000: 9265
14000: 10573
15000: 11895
16000: 13223
17000: 14545
18000: 15773
19000: 17059
20000: 18365
21000: 19727
22000: 21024
23000: 22392
24000: 23703
SORT TIME: 13.22

On vector
0: 0
1000: 643
2000: 1317
3000: 2002
4000: 2670
5000: 3312
6000: 3979
7000: 4651
8000: 5269
9000: 5917
10000: 6588
11000: 7229
12000: 8000
13000: 9265
14000: 10573
15000: 11895
16000: 13223
17000: 14545
18000: 15773
19000: 17059
20000: 18365
21000: 19727
22000: 21024
23000: 22392
24000: 23703
SORT TIME: 22.743

Running Shell Sort
On C-Array
0: 0
1000: 643
2000: 1317
3000: 2002
4000: 2670
5000: 3312
6000: 3979
7000: 4651
8000: 5269
9000: 5917
10000: 6588
11000: 7229
12000: 8000
13000: 9265
14000: 10573
15000: 11895
16000: 13223
17000: 14545
18000: 15773
19000: 17059
20000: 18365
21000: 19727
22000: 21024
23000: 22392
24000: 23703
SORT TIME: 0.005

On Array<int>
0: 0
1000: 643
2000: 1317
3000: 2002
4000: 2670
5000: 3312
6000: 3979
7000: 4651
8000: 5269
9000: 5917
10000: 6588
11000: 7229
12000: 8000
13000: 9265
14000: 10573
15000: 11895
16000: 13223
17000: 14545
18000: 15773
19000: 17059
20000: 18365
21000: 19727
22000: 21024
23000: 22392
24000: 23703
SORT TIME: 0.062

On vector
0: 0
1000: 643
2000: 1317
3000: 2002
4000: 2670
5000: 3312
6000: 3979
7000: 4651
8000: 5269
9000: 5917
10000: 6588
11000: 7229
12000: 8000
13000: 9265
14000: 10573
15000: 11895
16000: 13223
17000: 14545
18000: 15773
19000: 17059
20000: 18365
21000: 19727
22000: 21024
23000: 22392
24000: 23703
SORT TIME: 0.106

Running Heap Sort
On C-Array
0: 0
1000: 643
2000: 1317
3000: 2002
4000: 2670
5000: 3312
6000: 3979
7000: 4651
8000: 5269
9000: 5917
10000: 6588
11000: 7229
12000: 8000
13000: 9265
14000: 10573
15000: 11895
16000: 13223
17000: 14545
18000: 15773
19000: 17059
20000: 18365
21000: 19727
22000: 21024
23000: 22392
24000: 23703
SORT TIME: 0.005

On Array<int>
0: 0
1000: 643
2000: 1317
3000: 2002
4000: 2670
5000: 3312
6000: 3979
7000: 4651
8000: 5269
9000: 5917
10000: 6588
11000: 7229
12000: 8000
13000: 9265
14000: 10573
15000: 11895
16000: 13223
17000: 14545
18000: 15773
19000: 17059
20000: 18365
21000: 19727
22000: 21024
23000: 22392
24000: 23703
SORT TIME: 0.095

On vector
0: 0
1000: 643
2000: 1317
3000: 2002
4000: 2670
5000: 3312
6000: 3979
7000: 4651
8000: 5269
9000: 5917
10000: 6588
11000: 7229
12000: 8000
13000: 9265
14000: 10573
15000: 11895
16000: 13223
17000: 14545
18000: 15773
19000: 17059
20000: 18365
21000: 19727
22000: 21024
23000: 22392
24000: 23703
SORT TIME: 0.161

Running Merge Sort
On C-Array
0: 0
1000: 643
2000: 1317
3000: 2002
4000: 2670
5000: 3312
6000: 3979
7000: 4651
8000: 5269
9000: 5917
10000: 6588
11000: 7229
12000: 8000
13000: 9265
14000: 10573
15000: 11895
16000: 13223
17000: 14545
18000: 15773
19000: 17059
20000: 18365
21000: 19727
22000: 21024
23000: 22392
24000: 23703
SORT TIME: 0.006

On Array<int>
0: 0
1000: 643
2000: 1317
3000: 2002
4000: 2670
5000: 3312
6000: 3979
7000: 4651
8000: 5269
9000: 5917
10000: 6588
11000: 7229
12000: 8000
13000: 9265
14000: 10573
15000: 11895
16000: 13223
17000: 14545
18000: 15773
19000: 17059
20000: 18365
21000: 19727
22000: 21024
23000: 22392
24000: 23703
SORT TIME: 0.064

On vector
0: 0
1000: 643
2000: 1317
3000: 2002
4000: 2670
5000: 3312
6000: 3979
7000: 4651
8000: 5269
9000: 5917
10000: 6588
11000: 7229
12000: 8000
13000: 9265
14000: 10573
15000: 11895
16000: 13223
17000: 14545
18000: 15773
19000: 17059
20000: 18365
21000: 19727
22000: 21024
23000: 22392
24000: 23703
SORT TIME: 0.106

Running Quick Sort
On C-Array
0: 0
1000: 643
2000: 1317
3000: 2002
4000: 2670
5000: 3312
6000: 3979
7000: 4651
8000: 5269
9000: 5917
10000: 6588
11000: 7229
12000: 8000
13000: 9265
14000: 10573
15000: 11895
16000: 13223
17000: 14545
18000: 15773
19000: 17059
20000: 18365
21000: 19727
22000: 21024
23000: 22392
24000: 23703
SORT TIME: 0.011

On Array<int>
0: 0
1000: 643
2000: 1317
3000: 2002
4000: 2670
5000: 3312
6000: 3979
7000: 4651
8000: 5269
9000: 5917
10000: 6588
11000: 7229
12000: 8000
13000: 9265
14000: 10573
15000: 11895
16000: 13223
17000: 14545
18000: 15773
19000: 17059
20000: 18365
21000: 19727
22000: 21024
23000: 22392
24000: 23703
SORT TIME: 0.03

On vector
0: 0
1000: 643
2000: 1317
3000: 2002
4000: 2670
5000: 3312
6000: 3979
7000: 4651
8000: 5269
9000: 5917
10000: 6588
11000: 7229
12000: 8000
13000: 9265
14000: 10573
15000: 11895
16000: 13223
17000: 14545
18000: 15773
19000: 17059
20000: 18365
21000: 19727
22000: 21024
23000: 22392
24000: 23703
SORT TIME: 0.044

